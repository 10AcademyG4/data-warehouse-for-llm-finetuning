services:
  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data_container:/data/db

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - "4000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus

  mongodb_exporter:
    image: bitnami/mongodb-exporter
    container_name: mongodb_exporter
    ports:
      - "9216:9216"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
    restart: unless-stopped

  # Kafka and Faust- stream processing
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
      image: wurstmeister/kafka:latest
      ports:
        - "9092:9092"
        - "9093:9093"
      environment:
        KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
        KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_CREATE_TOPICS: "my-topic:1:1"
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock

  faust:
    build: ./faust
    command: /bin/sh -c "ls -l && faust -A app:app worker -l info"
    depends_on:
      - kafka
    environment:
    - KAFKA_BROKER_URL=kafka://kafka:9092
    - WEB_PORT:6066

    ports:
      - "6068:6066"

volumes:
  mongodb_data_container:
  grafana-storage:
  prom_data: